id;Subject;Type;Description;Changes in I4AAS/V3;Status;Comment
1;Referable;V3 Feature;displayName and description were added as optional LangStringSet;new mapping rule - gets mapped to UANode native DisplayName and Description if present, otherwhise idShort is used;ok;
2;LangStringSet;Bugfix;modeling insufficient, LocalizedText must be of ValueRank OneDimensional and not Scalar;changes for all LocalizedText Attributes;ok;
3;Asset;Bugfix;"in I4AAS, Asset is a mandatory component of AAS with name ""Asset"" but should be prefixed ""Asset:{shortId}"". This does not work according to the definition of AASAssetAdministrationShellType.";no changes since V3 handles Assets now completely  different;ok;
4;Rules for Identifiables, Environment for Identifiables;Bugfix + Adjustments for V3;some Identifiables (Asset, Submodel) are modelled as component of the AAS. This is contradictory to some concepts of the AAS Meta Model, e.g. Submodels and Assets can be referenced by multiples AAS's.;"Removed Submodel and Asset Component from AAS.
new rule: Submodel, AAS and Asset can be placed anywhere in the OPC UA Addressspace, but a basic FolderType (""AASEnvironmentType"") has been introduced which should be instantiated and used as parent folder.
note: SubmodelReferences and AssetReferences can contain the optional and native OPC UA References ""AASReference"".";ok;
5;Referable and Identifiable;Enhancement;Referable and Identifiabla in I4AAS are Interfaces, but in AAS are modelled as abstract classes. Referable and Identifiable are core concepts and contain mandatory fields. It can be modelled as abstract classes in I4AAS because it does not introduce problems of multiple inheritance. This also avoids the mismodelling by missing the mandatory fields. HasInterface was also not implemented!;"introduced abstract classes as top level classes which uses HasInterface Reference to the existing Interface. Only the ConceptDictionary already inherits DictionaryEntryType thus can not reuse the abstract class. Also HasInterface is just a ""hint"", you still need to model the attributes. This was missing has been done as well.";ok;
6;ConceptDictionary;Bugfix;OPC UA Dictionary is used as ConceptDictionary, thus the dedicated Types AASConceptDictionaryType is not needed anymore. ;AASConceptDictionaryType removed. Also legacy references are removed;ok;
7;AssetInformation;V3 Change;introduced;AASAssetInformationType introduced;ok;
8;AASReference;Bugfix;"AASReference is non-hierarchical. Also See: https://reference.opcfoundation.org/v104/Core/docs/Part3/7.4/
""The semantic of NonHierarchicalReferences is to denote that its subtypes do not span a hierarchy and should not be followed when trying to present a hierarchy."" But this is the whole point of the AASReference, to follow the hierarchy which could be denoted by the AASReferenceType.";"removed AASReference and uses the hierachical reference HasAddIn to avoid confusion about ""a AASRerence Type which has a component referenced by a AASReference"". 
Also this can only happen for an object instance at runtime, when the referable exists. Thus it is not possible to add this with modeling rules because this will predefine some attribtues like browsename, which is IdShort of the actual Referable.";ok;
9;AASReferenceType;Bugfix;OptionalPlaceholder Referable is a BaseObjectType and as HasComponent defined, but it should be used the AASReference Type with Target AASReferableType.;using AASReference Type with Target AASReferableType. Removed legacy, non-hierachical Reference, see #8.;ok;
10;HasInterface;Bugfix;HasInterface already exists in OPC UA Standard but has been introduced within the I4AAS Namespace;removed proprietary HasInterface Reference Type;ok;
11;AASKeyDataType;V3 Change;"""local"" Attribute has been removed";"removed ""local"" attribute";ok;
12;Asset;V3 Change;Asset is now only identifiable and hasDataSpecification, other attributes are now in AssetInformation;altered AASAssetType;ok;
13;ValueListType;Bugfix;This type definition is not used anymore.;removed;ok;
14;AASBlobType;Bugfix;does not represent a blob, but a file. Misses MimeType and Value Attribute;removed File Component, added MimeType and Value. Value is of Type ByteString;ok;
15;AASFileType;Bugfix;Value is not of Type PathType, File is added as Component, should be HasAddIn since it is not part of the AAS Spec but an enhancement of I4AAS;"changed Value Type Definition
changed File Reference Type
changed Modeling Rule for Value";ok;
16;Entity;Bugfix + Adjustments for V3;"added globalAssetId
added specificAssetId
removed ""Asset""";;ok;
17;IdentifierKeyValuePair;added in V3;completely new type;added as AASIdentifierKeyValuePairType;ok;
18;AASDataTypeIEC62…;Bugfix;messed up, INTEGER_MEASURE missing;rearranged as in the AAS Meta Model Spec;ok;
19;Identifier;Enhancement;modeled as Type, but could be Structure;just proposed since issues with structures are known;;should be considered in an updated version
20;HasExtension / Extension;added in V3;new Class and Type Defintion;;;
21;AssetAdministrationShell/conceptDictionaries;changed in V3;;removed;ok;
22;View;changed  in V3;is now deprecated;removed AASViewType FolderType;ok;
23;SecurityPart;?;not in scope?;no further action;;should be considered in an updated version
24;Operation;?;"AAS defined attributes are missing. I4AAS says it uses native Method as ""Operation"" Object and the modelling rule (btw spec and model are contradictory) allows for the inclusion of arguments. But still, OperationVariable as in AAS are not the argument but just their definitions and thus are missing in I4AAS.";should be redefined, considered for further changes;;
25;DictionaryEntry;Bugfix;"https://reference.opcfoundation.org/v104/Core/docs/Amendment5/G.4/#TableG.6

""The identifier in the respective external dictionary shall be a unique URI string. This identifier is used for the NodeId and the BrowseName Attributes of instances of the DictionaryEntryType. The IdentifierType of the NodeId shall be STRING_1 with the identifier from the external dictionary as the value.""

Currently the NodeId does not follow this convention.";no action, see #27;ok;
26;General;Design Flaw;Many list are modeled as optional placeholder. Therefore, the attribute name of such a list given by the AAS Spec gets lost. It will lead to inconsistencies, e.g. when the order of such a list matters, if there are two list of the same type but with different attribute names, …;"affected attribtues:
AssetInformation/specificAssetId
HasDataSpecification/dataSpecification
AnnotatedRelationshipElement/annotation
Entity/statement
ConceptDescription/isCaseOf
Qualifiable/qualifier
AssetAdministrationShell/Submodel

not affected:
SubmodelElementCollection (because itself is alredy a collection)
Lists of Variables, e.g. LangString, Reference,...

fix by using introducing a (mandatory) folder which contains the list element (as placeholders) and can be names according to AAS specification";ok;
27;predefined dictionary entries;Clean Up;Due to the type definition and naming convention of the NodeId.csv export, names are duplicated. This causes issues for some SDKs. Also, due to the refactoring accoring to V3, the entries or not valid anymore.;removed all entries.;ok;Entries should be added in an updated version.
28;IdShort;Clean Up;IdShort is mapped to BrowseName, but a few IdShort legacy objects were still present;removed legacy entries;ok;
29;AASDataSpecificationIEC61360Type;Bugfix;contains Administraton and Category;must be removed;ok;
30;Qualifiable;Bugfix;not implemented in I4AAS;introduce Interface?;;
31;AASQualifierType;Bugfix;some attribute types do not fit;changed according to AAS V4;ok;
32;BillOfMaterial;V3 Changes;The definition for BillOfMaterial was not that clear. It seems like BillOfMaterial is a List of References, no a single Reference.;should be solved by using a AASReferenceList;ok;
;;;;;;
;;;;;;
